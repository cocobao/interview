  c程序内存分配区域问题。记得以前学《Unix高级环境编程》时书中有提到c程序内存分配问题。然后有次面试时，问到这个问题我根据书上的内容来回答的，面试官却说回答的对了一半，当时很纳闷怎么会对了一半呢。下面来解释下。
先来说下c程序编译内存分配：
1.栈区(stack)：存放局部变量和参数，申请和释放都由编译器自动完成。
2.堆区(heap)：动态内存分配，申请和释放都是由程序员控制。
3.静态区/全局区(static)：存放全局变量和静态变量。下面存放了未初始化的静态/全局变量。
4.文字常量区：存放字符串常量的。比如，char *p = “my name is yuzhihui!”。“my....hui!”字符串常量就存放那个区域。
5.代码区(code)：用来存放代码的。

  第二种是程序在运行时内存分配，这也是我开始讲到的在《Unix高级环境编程》中看到的，程序在进程中的内存分配区域。
从高地址到地址：
1.环境变量(Unix/Linux中全局环境变量)
2.stack区，存放内容和上文同。
3.heap区，存放内容和上文同。值得说明的是：stack区起始地址是在高地址，即是从高地址向低地址延伸。而heap区起始地址是在低地址，即是从低地址向高地址延伸。总结：stack起始地址固定在高地址，heap起始地址固定在低地址，然后两个区都向中间延伸。直到stack区和heap区的结束地址重合则表示没有stack和heap内存空间了。
4.data区，分为bss未初始化的数据区和初始化的数据区。
5.文本(text)区，存放代码的区域。
